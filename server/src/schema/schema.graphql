type User {
  id: ID!
  full_name: String!
  email: String!
  password: String
  role: String!
  profile_picture: String
  phone: String
  description: String
  created_at: String
  donations: [Donation]
  favorites: [Favorite]
  ngos: [NGO]
  notifications: [Notification]
  volunteer_events: [EventVolunteer]
}

type NGO {
  id: ID!
  name: String!
  cause: String
  description: String
  location: String
  contact_info: String
  donation_link: String
  ngo_picture: String
  created_by: ID
  created_at: String
  events: [Event]
  donations: [Donation]
  favorites: [Favorite]
  creator: User
}

type Event {
  id: ID!
  title: String!
  description: String
  event_date: String
  location: String
  volunteers_needed: Int
  ngo_id: ID!
  ngo: NGO
  volunteers: [EventVolunteer]
  created_at: String
}

type Donation {
  id: ID!
  amount: Float!
  message: String
  user_id: ID!
  ngo_id: ID!
  user: User
  ngo: NGO
  created_at: String
}

type Favorite {
  id: ID!
  user_id: ID!
  ngo_id: ID!
  user: User
  ngo: NGO
  created_at: String
}

type Notification {
  id: ID!
  message: String!
  user_id: ID!
  user: User
  cause_id: ID
  cause: Cause
  created_at: String
}

type EventVolunteer {
  id: ID!
  user_id: ID!
  event_id: ID!
  registered_at: String
  event: Event
  user: User
}

type Cause {
  id: ID!
  title: String!
  created_at: String
  notifications: [Notification]
}

type AuthPayload {
  token: String!
  user: User!
}

type Query {
  ngos: [NGO]
  ngo(id: ID!): NGO
  
  events(organizerId: ID): [Event!]!
  users: [User]
  user(id: ID!): User
  userDonations: [Donation]
  userFavorites: [Favorite]
  userNotifications: [Notification]
  organizerNGOs: [NGO]
  organizerEvents: [Event]
  organizerDonations: [Donation]
  organizerVolunteers: [EventVolunteer]
  organizerFavorites: [Favorite]
}

type Mutation {
  signUpUser(
    email: String!
    full_name: String!
    password: String!
    profile_picture: String
    role: String!
    phone: String
    description: String
  ): AuthPayload

  loginUser(email: String!, password: String!): AuthPayload

  createNGO(
    name: String!
    cause: String
    description: String
    location: String
    contact_info: String
    donation_link: String
    ngo_picture: String
  ): NGO

  updateNGO(
    id: ID!
    name: String
    cause: String
    description: String
    location: String
    contact_info: String
    donation_link: String
    ngo_picture: String
  ): NGO

  deleteNGO(id: ID!): NGO

  createEvent(
    ngo_id: ID!
    title: String!
    description: String
    event_date: String
    location: String
    volunteers_needed: Int
  ): Event

  deleteEvent(id: ID!): Event

  donateToNGO(ngo_id: ID!, amount: Float!, message: String): Donation

  addFavorite(ngo_id: ID!): Favorite
  removeFavorite(ngo_id: ID!): String

  registerVolunteer(event_id: ID!): EventVolunteer
  removeVolunteer(event_id: ID!, user_id: ID!): String

  createNotification(message: String!, cause_id: ID): Notification

  updateUser(
    id: ID!
    full_name: String
    profile_picture: String
    phone: String
    description: String
    email: String
  ): User

  deleteUser(id: ID!): User
}
