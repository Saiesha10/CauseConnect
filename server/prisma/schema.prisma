generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String           @id @default(uuid()) @map("id")
  full_name        String           @map("full_name")
  email            String           @unique @map("email")
  password         String           @map("password")
  role             String           @map("role")
  profile_picture  String?          @map("profile_picture")
  phone            String?          @map("phone")
  description      String?          @map("description")
  created_at       DateTime         @default(now()) @map("created_at")
  donations        Donation[]
  volunteer_events EventVolunteer[]
  favorites        Favorite[]
  ngos             NGO[]            @relation("UserNGOs")
  notifications    Notification[]

  @@map("users")
}

model NGO {
  id            String     @id @default(uuid())
  name          String
  cause         String?
  description   String?
  location      String?
  contact_info  String?
  donation_link String?
  ngo_picture   String?
  created_at    DateTime   @default(now())
  created_by    String?
  donations     Donation[]
  events        Event[]
  favorites     Favorite[]
  creator       User?      @relation("UserNGOs", fields: [created_by], references: [id])

  @@map("ngos")
}

model Event {
  id                String           @id @default(uuid())
  ngo_id            String
  title             String
  description       String?
  event_date        DateTime?
  location          String?
  volunteers_needed Int?
  created_at        DateTime         @default(now())
  volunteers        EventVolunteer[]
  ngo               NGO              @relation(fields: [ngo_id], references: [id])

  @@map("events")
}

model Donation {
  id         String   @id @default(uuid())
  user_id    String
  ngo_id     String
  amount     Float
  message    String?
  created_at DateTime @default(now())
  ngo        NGO      @relation(fields: [ngo_id], references: [id])
  user       User     @relation(fields: [user_id], references: [id])

  @@map("donations")
}

model Favorite {
  id         String   @id @default(uuid())
  user_id    String
  ngo_id     String
  created_at DateTime @default(now())
  ngo        NGO      @relation(fields: [ngo_id], references: [id])
  user       User     @relation(fields: [user_id], references: [id])

  @@map("favorites")
}

model EventVolunteer {
  id            String   @id @default(uuid())
  event_id      String
  user_id       String
  registered_at DateTime @default(now())
  event         Event    @relation(fields: [event_id], references: [id])
  user          User     @relation(fields: [user_id], references: [id])

  @@map("event_volunteers")
}

model Notification {
  id         String   @id @default(uuid())
  user_id    String
  message    String
  cause_id   String?
  created_at DateTime @default(now())
  cause      Cause?   @relation(fields: [cause_id], references: [id])
  user       User     @relation(fields: [user_id], references: [id])

  @@map("notifications")
}

model Cause {
  id            String         @id @default(uuid())
  title         String
  created_at    DateTime       @default(now())
  notifications Notification[]

  @@map("causes")
}
